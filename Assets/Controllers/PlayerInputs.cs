//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Controllers/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""317faabc-1e76-4d46-be45-c487bf7e3653"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""c7a9d4db-0457-4028-9fb9-d85c55d8c0f5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1528f5f4-7d64-4165-bcf6-9e48200184dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""d6a101f2-e011-4c72-9ca1-8fdaec625c0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CastSpell"",
                    ""type"": ""Button"",
                    ""id"": ""73514949-f6b5-4b75-9f0a-97a3880f51e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""f47c1ecd-0d07-4c65-bfa5-281135016e4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""c7c0f5ac-da2a-4e99-9e02-90f104fe9ccc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Accept"",
                    ""type"": ""Button"",
                    ""id"": ""8e5a7e78-3c11-4284-9254-6a97d48f646c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""a992d256-b188-442c-bf4c-c43a4407fd17"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirstBendingSlot"",
                    ""type"": ""Button"",
                    ""id"": ""b3cbf0d5-f7d9-41f4-b851-9122ff09e032"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondBendingSlot"",
                    ""type"": ""Button"",
                    ""id"": ""7ebd5871-37f4-4184-8d0a-2b201552e8ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThirdBendingSlot"",
                    ""type"": ""Button"",
                    ""id"": ""89019fcd-f28c-41a2-9a9c-c4c164fd68c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FourthBendingSlot"",
                    ""type"": ""Button"",
                    ""id"": ""6a74c4a4-e483-4293-8081-222b2b3b4c7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextSpell"",
                    ""type"": ""Value"",
                    ""id"": ""f252bde8-ad40-42a2-be11-97167a15a447"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PreviousSpell"",
                    ""type"": ""Value"",
                    ""id"": ""52b70e61-ce09-4dcc-a9d6-8560948689ba"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""NumKeys"",
                    ""type"": ""Button"",
                    ""id"": ""7798e011-2616-4c18-b3b7-420d7c743f13"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6c95507f-755b-4c5b-beb2-0f64bd0d9afe"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""560b3df1-fed5-4c9f-8ab0-d2eb658c8ef7"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e4cd32d0-1b4b-4c5e-bbb0-d318685c5250"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dd9c16cd-5793-47cd-8326-4595da6a9399"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""881d2b2c-1072-4f83-a4c8-924043b7357b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a0944ce3-ba1e-4043-beb0-776e6b8ebc24"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ffdaa278-60e1-4ebf-a970-aa7c9cb3fc68"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3f44c3df-6ff6-4feb-9d16-4c5ca622a960"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""868f4e82-1669-4880-b100-8928d643b76d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CastSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d3db80f-c448-4d67-b453-74af8aac17c7"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca33c892-6bdc-4a7f-a3c3-dd0980e0cd72"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f34e409-3667-47d0-b1fb-c99fcdaf0abb"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accept"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55e74357-7bec-46d7-a9a4-87ecf371b9fe"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e1f813d-9825-480f-8b38-03cb47e7cb5e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FourthBendingSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae014dbb-7b45-4c00-a595-005663dcf597"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThirdBendingSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""462c8787-c56e-4936-8594-bbdec7e81e85"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstBendingSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e3ec25c-6859-4931-aca8-3185c07ed7b4"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondBendingSlot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4db0bc43-8c5d-4844-a557-0f01c2a87cdf"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""439d66cb-72f7-4e2a-a966-2bceac5b8149"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76f0cabf-db06-4c53-af3b-3a9f753720c1"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""NumKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebeabac2-42bd-45f6-9e1e-289e32bd67ad"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""NumKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e8dda96-b66c-469a-ace4-54fa47f38c62"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""NumKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f783d76-7a31-45db-a157-6814483682ee"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""NumKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""996ea9c3-47ce-497d-a284-ac7d43f2e52d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""0fef848d-d140-4bbb-8b63-35454ad5f473"",
            ""actions"": [
                {
                    ""name"": ""PauseView"",
                    ""type"": ""Button"",
                    ""id"": ""8b0f8e74-616f-4dd9-9312-0d71611a8748"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ElementTypeSelectionView"",
                    ""type"": ""Button"",
                    ""id"": ""77886d6c-344c-4efc-a6f4-e315885ea8f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpellsView"",
                    ""type"": ""Button"",
                    ""id"": ""582f2776-62b4-4a5f-a52b-a8fdd03b8155"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NumKeys"",
                    ""type"": ""Button"",
                    ""id"": ""4c4fa024-47fd-4ca4-a5d9-e4c0d3e75fe4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a16c4788-28b5-439d-9736-7a0fd52748a7"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85cfa5f0-decc-45b8-a8cf-45f2cd2fda5b"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ElementTypeSelectionView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82284052-6098-47f8-b5b5-972257f2056c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpellsView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07296f7a-2d85-41f6-8d5a-52d009ce7966"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""NumKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6da9f772-8a3c-474b-9ede-d5271eebc54b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""NumKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""433e45c0-2300-42da-8db2-01e31607c2dd"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""NumKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7581b8ba-2f7c-417c-aa09-17e818a85352"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""NumKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debug"",
            ""id"": ""66708597-87ff-4113-86c9-76a21fd218ff"",
            ""actions"": [
                {
                    ""name"": ""IncreaseMovementSpeed"",
                    ""type"": ""Button"",
                    ""id"": ""876d0f9d-d9eb-472e-a106-32647bc4f950"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DecreaseMovementSpeed"",
                    ""type"": ""Button"",
                    ""id"": ""948e8777-b5bd-4a0f-9411-b4993f8bd95b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StandardMovementSpeed"",
                    ""type"": ""Button"",
                    ""id"": ""f56ae018-0947-4d29-960b-4d1da31f7f7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5eaf0bfa-2b9d-4337-b107-4c915568cea0"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IncreaseMovementSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a892829-8e34-495a-8eff-0cde0dfb0449"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DecreaseMovementSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93c705aa-5f7b-44c4-b0a5-7754692f38eb"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StandardMovementSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_CastSpell = m_Player.FindAction("CastSpell", throwIfNotFound: true);
        m_Player_Run = m_Player.FindAction("Run", throwIfNotFound: true);
        m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
        m_Player_Accept = m_Player.FindAction("Accept", throwIfNotFound: true);
        m_Player_Aim = m_Player.FindAction("Aim", throwIfNotFound: true);
        m_Player_FirstBendingSlot = m_Player.FindAction("FirstBendingSlot", throwIfNotFound: true);
        m_Player_SecondBendingSlot = m_Player.FindAction("SecondBendingSlot", throwIfNotFound: true);
        m_Player_ThirdBendingSlot = m_Player.FindAction("ThirdBendingSlot", throwIfNotFound: true);
        m_Player_FourthBendingSlot = m_Player.FindAction("FourthBendingSlot", throwIfNotFound: true);
        m_Player_NextSpell = m_Player.FindAction("NextSpell", throwIfNotFound: true);
        m_Player_PreviousSpell = m_Player.FindAction("PreviousSpell", throwIfNotFound: true);
        m_Player_NumKeys = m_Player.FindAction("NumKeys", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_PauseView = m_UI.FindAction("PauseView", throwIfNotFound: true);
        m_UI_ElementTypeSelectionView = m_UI.FindAction("ElementTypeSelectionView", throwIfNotFound: true);
        m_UI_SpellsView = m_UI.FindAction("SpellsView", throwIfNotFound: true);
        m_UI_NumKeys = m_UI.FindAction("NumKeys", throwIfNotFound: true);
        // Debug
        m_Debug = asset.FindActionMap("Debug", throwIfNotFound: true);
        m_Debug_IncreaseMovementSpeed = m_Debug.FindAction("IncreaseMovementSpeed", throwIfNotFound: true);
        m_Debug_DecreaseMovementSpeed = m_Debug.FindAction("DecreaseMovementSpeed", throwIfNotFound: true);
        m_Debug_StandardMovementSpeed = m_Debug.FindAction("StandardMovementSpeed", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_CastSpell;
    private readonly InputAction m_Player_Run;
    private readonly InputAction m_Player_Crouch;
    private readonly InputAction m_Player_Accept;
    private readonly InputAction m_Player_Aim;
    private readonly InputAction m_Player_FirstBendingSlot;
    private readonly InputAction m_Player_SecondBendingSlot;
    private readonly InputAction m_Player_ThirdBendingSlot;
    private readonly InputAction m_Player_FourthBendingSlot;
    private readonly InputAction m_Player_NextSpell;
    private readonly InputAction m_Player_PreviousSpell;
    private readonly InputAction m_Player_NumKeys;
    private readonly InputAction m_Player_Look;
    public struct PlayerActions
    {
        private @PlayerInputs m_Wrapper;
        public PlayerActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @CastSpell => m_Wrapper.m_Player_CastSpell;
        public InputAction @Run => m_Wrapper.m_Player_Run;
        public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
        public InputAction @Accept => m_Wrapper.m_Player_Accept;
        public InputAction @Aim => m_Wrapper.m_Player_Aim;
        public InputAction @FirstBendingSlot => m_Wrapper.m_Player_FirstBendingSlot;
        public InputAction @SecondBendingSlot => m_Wrapper.m_Player_SecondBendingSlot;
        public InputAction @ThirdBendingSlot => m_Wrapper.m_Player_ThirdBendingSlot;
        public InputAction @FourthBendingSlot => m_Wrapper.m_Player_FourthBendingSlot;
        public InputAction @NextSpell => m_Wrapper.m_Player_NextSpell;
        public InputAction @PreviousSpell => m_Wrapper.m_Player_PreviousSpell;
        public InputAction @NumKeys => m_Wrapper.m_Player_NumKeys;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @CastSpell.started += instance.OnCastSpell;
            @CastSpell.performed += instance.OnCastSpell;
            @CastSpell.canceled += instance.OnCastSpell;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @Accept.started += instance.OnAccept;
            @Accept.performed += instance.OnAccept;
            @Accept.canceled += instance.OnAccept;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @FirstBendingSlot.started += instance.OnFirstBendingSlot;
            @FirstBendingSlot.performed += instance.OnFirstBendingSlot;
            @FirstBendingSlot.canceled += instance.OnFirstBendingSlot;
            @SecondBendingSlot.started += instance.OnSecondBendingSlot;
            @SecondBendingSlot.performed += instance.OnSecondBendingSlot;
            @SecondBendingSlot.canceled += instance.OnSecondBendingSlot;
            @ThirdBendingSlot.started += instance.OnThirdBendingSlot;
            @ThirdBendingSlot.performed += instance.OnThirdBendingSlot;
            @ThirdBendingSlot.canceled += instance.OnThirdBendingSlot;
            @FourthBendingSlot.started += instance.OnFourthBendingSlot;
            @FourthBendingSlot.performed += instance.OnFourthBendingSlot;
            @FourthBendingSlot.canceled += instance.OnFourthBendingSlot;
            @NextSpell.started += instance.OnNextSpell;
            @NextSpell.performed += instance.OnNextSpell;
            @NextSpell.canceled += instance.OnNextSpell;
            @PreviousSpell.started += instance.OnPreviousSpell;
            @PreviousSpell.performed += instance.OnPreviousSpell;
            @PreviousSpell.canceled += instance.OnPreviousSpell;
            @NumKeys.started += instance.OnNumKeys;
            @NumKeys.performed += instance.OnNumKeys;
            @NumKeys.canceled += instance.OnNumKeys;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @CastSpell.started -= instance.OnCastSpell;
            @CastSpell.performed -= instance.OnCastSpell;
            @CastSpell.canceled -= instance.OnCastSpell;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @Accept.started -= instance.OnAccept;
            @Accept.performed -= instance.OnAccept;
            @Accept.canceled -= instance.OnAccept;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @FirstBendingSlot.started -= instance.OnFirstBendingSlot;
            @FirstBendingSlot.performed -= instance.OnFirstBendingSlot;
            @FirstBendingSlot.canceled -= instance.OnFirstBendingSlot;
            @SecondBendingSlot.started -= instance.OnSecondBendingSlot;
            @SecondBendingSlot.performed -= instance.OnSecondBendingSlot;
            @SecondBendingSlot.canceled -= instance.OnSecondBendingSlot;
            @ThirdBendingSlot.started -= instance.OnThirdBendingSlot;
            @ThirdBendingSlot.performed -= instance.OnThirdBendingSlot;
            @ThirdBendingSlot.canceled -= instance.OnThirdBendingSlot;
            @FourthBendingSlot.started -= instance.OnFourthBendingSlot;
            @FourthBendingSlot.performed -= instance.OnFourthBendingSlot;
            @FourthBendingSlot.canceled -= instance.OnFourthBendingSlot;
            @NextSpell.started -= instance.OnNextSpell;
            @NextSpell.performed -= instance.OnNextSpell;
            @NextSpell.canceled -= instance.OnNextSpell;
            @PreviousSpell.started -= instance.OnPreviousSpell;
            @PreviousSpell.performed -= instance.OnPreviousSpell;
            @PreviousSpell.canceled -= instance.OnPreviousSpell;
            @NumKeys.started -= instance.OnNumKeys;
            @NumKeys.performed -= instance.OnNumKeys;
            @NumKeys.canceled -= instance.OnNumKeys;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_PauseView;
    private readonly InputAction m_UI_ElementTypeSelectionView;
    private readonly InputAction m_UI_SpellsView;
    private readonly InputAction m_UI_NumKeys;
    public struct UIActions
    {
        private @PlayerInputs m_Wrapper;
        public UIActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @PauseView => m_Wrapper.m_UI_PauseView;
        public InputAction @ElementTypeSelectionView => m_Wrapper.m_UI_ElementTypeSelectionView;
        public InputAction @SpellsView => m_Wrapper.m_UI_SpellsView;
        public InputAction @NumKeys => m_Wrapper.m_UI_NumKeys;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @PauseView.started += instance.OnPauseView;
            @PauseView.performed += instance.OnPauseView;
            @PauseView.canceled += instance.OnPauseView;
            @ElementTypeSelectionView.started += instance.OnElementTypeSelectionView;
            @ElementTypeSelectionView.performed += instance.OnElementTypeSelectionView;
            @ElementTypeSelectionView.canceled += instance.OnElementTypeSelectionView;
            @SpellsView.started += instance.OnSpellsView;
            @SpellsView.performed += instance.OnSpellsView;
            @SpellsView.canceled += instance.OnSpellsView;
            @NumKeys.started += instance.OnNumKeys;
            @NumKeys.performed += instance.OnNumKeys;
            @NumKeys.canceled += instance.OnNumKeys;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @PauseView.started -= instance.OnPauseView;
            @PauseView.performed -= instance.OnPauseView;
            @PauseView.canceled -= instance.OnPauseView;
            @ElementTypeSelectionView.started -= instance.OnElementTypeSelectionView;
            @ElementTypeSelectionView.performed -= instance.OnElementTypeSelectionView;
            @ElementTypeSelectionView.canceled -= instance.OnElementTypeSelectionView;
            @SpellsView.started -= instance.OnSpellsView;
            @SpellsView.performed -= instance.OnSpellsView;
            @SpellsView.canceled -= instance.OnSpellsView;
            @NumKeys.started -= instance.OnNumKeys;
            @NumKeys.performed -= instance.OnNumKeys;
            @NumKeys.canceled -= instance.OnNumKeys;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // Debug
    private readonly InputActionMap m_Debug;
    private List<IDebugActions> m_DebugActionsCallbackInterfaces = new List<IDebugActions>();
    private readonly InputAction m_Debug_IncreaseMovementSpeed;
    private readonly InputAction m_Debug_DecreaseMovementSpeed;
    private readonly InputAction m_Debug_StandardMovementSpeed;
    public struct DebugActions
    {
        private @PlayerInputs m_Wrapper;
        public DebugActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @IncreaseMovementSpeed => m_Wrapper.m_Debug_IncreaseMovementSpeed;
        public InputAction @DecreaseMovementSpeed => m_Wrapper.m_Debug_DecreaseMovementSpeed;
        public InputAction @StandardMovementSpeed => m_Wrapper.m_Debug_StandardMovementSpeed;
        public InputActionMap Get() { return m_Wrapper.m_Debug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugActions set) { return set.Get(); }
        public void AddCallbacks(IDebugActions instance)
        {
            if (instance == null || m_Wrapper.m_DebugActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DebugActionsCallbackInterfaces.Add(instance);
            @IncreaseMovementSpeed.started += instance.OnIncreaseMovementSpeed;
            @IncreaseMovementSpeed.performed += instance.OnIncreaseMovementSpeed;
            @IncreaseMovementSpeed.canceled += instance.OnIncreaseMovementSpeed;
            @DecreaseMovementSpeed.started += instance.OnDecreaseMovementSpeed;
            @DecreaseMovementSpeed.performed += instance.OnDecreaseMovementSpeed;
            @DecreaseMovementSpeed.canceled += instance.OnDecreaseMovementSpeed;
            @StandardMovementSpeed.started += instance.OnStandardMovementSpeed;
            @StandardMovementSpeed.performed += instance.OnStandardMovementSpeed;
            @StandardMovementSpeed.canceled += instance.OnStandardMovementSpeed;
        }

        private void UnregisterCallbacks(IDebugActions instance)
        {
            @IncreaseMovementSpeed.started -= instance.OnIncreaseMovementSpeed;
            @IncreaseMovementSpeed.performed -= instance.OnIncreaseMovementSpeed;
            @IncreaseMovementSpeed.canceled -= instance.OnIncreaseMovementSpeed;
            @DecreaseMovementSpeed.started -= instance.OnDecreaseMovementSpeed;
            @DecreaseMovementSpeed.performed -= instance.OnDecreaseMovementSpeed;
            @DecreaseMovementSpeed.canceled -= instance.OnDecreaseMovementSpeed;
            @StandardMovementSpeed.started -= instance.OnStandardMovementSpeed;
            @StandardMovementSpeed.performed -= instance.OnStandardMovementSpeed;
            @StandardMovementSpeed.canceled -= instance.OnStandardMovementSpeed;
        }

        public void RemoveCallbacks(IDebugActions instance)
        {
            if (m_Wrapper.m_DebugActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDebugActions instance)
        {
            foreach (var item in m_Wrapper.m_DebugActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DebugActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DebugActions @Debug => new DebugActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnCastSpell(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnAccept(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnFirstBendingSlot(InputAction.CallbackContext context);
        void OnSecondBendingSlot(InputAction.CallbackContext context);
        void OnThirdBendingSlot(InputAction.CallbackContext context);
        void OnFourthBendingSlot(InputAction.CallbackContext context);
        void OnNextSpell(InputAction.CallbackContext context);
        void OnPreviousSpell(InputAction.CallbackContext context);
        void OnNumKeys(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnPauseView(InputAction.CallbackContext context);
        void OnElementTypeSelectionView(InputAction.CallbackContext context);
        void OnSpellsView(InputAction.CallbackContext context);
        void OnNumKeys(InputAction.CallbackContext context);
    }
    public interface IDebugActions
    {
        void OnIncreaseMovementSpeed(InputAction.CallbackContext context);
        void OnDecreaseMovementSpeed(InputAction.CallbackContext context);
        void OnStandardMovementSpeed(InputAction.CallbackContext context);
    }
}
